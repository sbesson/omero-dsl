## SETUP
#set($table = ${type.typeToColumn($type.id)} )
#set($cascade_settings = "persist,merge,replicate,refresh,save-update")
##
<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >
    
<hibernate-mapping>
#if($type.superclass)<subclass
#else<class
#end
    name="${type.id}" 
    table="${table}"
    abstract="$type.abstract"
    #if($type.superclass)extends="$type.superclass"#end
    >

#if($type.abstract)
	<meta attribute="scope-class" inherit="false">public abstract</meta>
#end
	<meta attribute="implements">ome.model.IObject</meta>
#if(!$type.immutable)
	<meta attribute="implements">ome.model.IMutable</meta>
#end
	<meta attribute="implement-equals" inherit="false">true</meta>

	
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 COMMON
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	
	<id name="id" type="java.lang.Long" column="id">
		<generator class="sequence">
			<param name="sequence">seq_$table</param>
		</generator>
	</id>

#if(!$type.immutable)
	<version name="version" type="java.lang.Integer" 
		column="version" unsaved-value="negative"/>
#end

#if(!$type.global)	
	<component name="details" class="ome.model.internal.Details">
	  <many-to-one name="owner" class="ome.model.meta.Experimenter" 
		column="owner_id" update="false"
	  	not-null="true" cascade="$cascade_settings"/>
	  <many-to-one name="group" class="ome.model.meta.ExperimenterGroup" 
		column="group_id" update="false"
	  	not-null="true" cascade="$cascade_settings"/>
	  <many-to-one name="creationEvent" class="ome.model.meta.Event" 
		column="creation_id" update="false"
	  	not-null="true" cascade="$cascade_settings"/>		
#if(!$type.immutable)
	  <many-to-one name="updateEvent" class="ome.model.meta.Event" 
		column="update_id" 
	  	not-null="false"/>	
#end
#else
	<component name="details" class="ome.model.internal.Details"> ## FIXME
#end
	  <component name="permissions" class="ome.model.internal.Permissions">
		<property name="bytes" type="binary" column="permissions"/> 
		<!-- TODO possibly just default CHMOD here -->
	  </component>
	</component>


<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 INTERFACE-BASED
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

#if($type.named)
	<property name="name" type="java.lang.String" 
		column="name" not-null="true" unique="true" length="256"/>
#end

#if($type.described)
	<property name="description" type="java.lang.String" 
		column="description" length="256"/>
#end
	
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	 SPECIFIC
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	 
    <!-- Associations -->
	 
#foreach($prop in $type.properties)
#if($prop.class.name == "ome.dsl.EntryField")
<!-- TODO: need EnmerationInitialTask -->
#elseif($prop.one2Many)

	<!-- bi-directional one-to-many association to $prop.name -->
#if($prop.ordered)
    <list
#else
    <set
#end
		name="${prop.name}"
		lazy="true"
		inverse="true"
##TODO		mutable="${prop.mutable}"
		cascade="$cascade_settings">
		<key>
			<column name="${table}" not-null="${prop.required}"/>
		</key>
#if($prop.ordered)
       <list-index column="index"/>
#end
		<one-to-many class="${prop.type}"/>
#if($prop.ordered)
    </list>
#else
    </set>
#end
#elseif($prop.foreignKey)

    <!-- bi-directional many-to-one association to $prop.name -->
    <many-to-one
        name="${prop.name}"
        class="${prop.type}"
        not-null="${prop.required}"
	unique="${prop.unique}"
	update="${prop.mutable}"
	cascade="$cascade_settings">
        <column name="${prop.name}" />
    </many-to-one>

#else

	<property name="${prop.name}" type="${prop.type}" 
		not-null="${prop.required}" unique="${prop.unique}" 
		update="${prop.mutable}"/>

#end
#end
 </class>
</hibernate-mapping>
