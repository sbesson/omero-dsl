--
-- Copyright 2008 Glencoe Software, Inc. All rights reserved.
-- Use is subject to license terms supplied in LICENSE.txt
--

-- This file was generated by dsl/resources/ome/dsl/views.vm
-- and can be used to overwrite the generated Map<Long, Long> tables
-- with functional views.

BEGIN;

#foreach($type in $types)
#foreach($prop in $type.classProperties)
#if($prop.one2Many && $prop.isLink)
  DROP TABLE count_${type.shortname}_${prop.name}_by_owner;

  CREATE OR REPLACE VIEW count_${type.shortname}_${prop.name}_by_owner (${type.shortname}_id, owner_id, count) AS select ${prop.inverse}, owner_id, count(*)
    FROM ${prop.shortType} GROUP BY ${prop.inverse}, owner_id ORDER BY ${prop.inverse};

#end
#if($prop.one2Many && $prop.ordered)
#set( $tbl_name = $prop.actualType.table )
#set( $col_name = $prop.inverse )
  CREATE OR REPLACE FUNCTION ${tbl_name}_${col_name}_index_move() RETURNS "trigger" AS '
    DECLARE
      duplicate INT8;
    BEGIN

      -- Avoids a query if the new and old values of x are the same.
      IF new.${col_name} = old.${col_name} AND new.${col_name}_index = old.${col_name}_index THEN
          RETURN new;
      END IF;

      -- At most, there should be one duplicate
      SELECT id INTO duplicate
        FROM ${tbl_name}
       WHERE ${col_name} = new.${col_name} AND ${col_name}_index = new.${col_name}_index
      OFFSET 0
       LIMIT 1;

      IF duplicate IS NOT NULL THEN
          RAISE NOTICE ''Remapping ${tbl_name} % via (-1 - oldvalue )'', duplicate;
          UPDATE ${tbl_name} SET ${col_name}_index = -1 - ${col_name}_index WHERE id = duplicate;
      END IF;

      RETURN new;
    END;' LANGUAGE plpgsql;

  CREATE TRIGGER ${tbl_name}_${col_name}_index_trigger
        BEFORE UPDATE ON ${tbl_name}
        FOR EACH ROW EXECUTE PROCEDURE ${tbl_name}_${col_name}_index_move ();

#end
#end
#end
COMMIT;
